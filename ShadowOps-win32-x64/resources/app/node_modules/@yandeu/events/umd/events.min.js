!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n=t();for(var s in n)("object"==typeof exports?exports:e)[s]=n[s]}}(self,(()=>(()=>{"use strict";var e={d:(t,n)=>{for(var s in n)e.o(n,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:n[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{Events:()=>o});
/**
 * @package      npmjs.com/package/@yandeu/events (events.min.js)
 *
 * @author       Arnout Kazemier (https://github.com/3rd-Eden)
 * @copyright    Copyright (c) 2014 Arnout Kazemier
 * @license      {@link https://github.com/primus/eventemitter3/blob/master/LICENSE|MIT}
 *
 * @author       Yannick Deubel (https://github.com/yandeu)
 * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/yandeu/events
 * @license      {@link https://github.com/yandeu/events/blob/master/LICENSE|MIT}
 */
class n{constructor(e,t,n=!1){this.fn=e,this.context=t,this.once=n}}const s=(e,t,s,r,o)=>{if("function"!=typeof s)throw new TypeError("The listener must be a function");const i=new n(s,r||e,o);return e._events.has(t)?e._events.get(t).fn?e._events.set(t,[e._events.get(t),i]):e._events.get(t).push(i):(e._events.set(t,i),e._eventsCount++),e},r=(e,t)=>{0==--e._eventsCount?e._events=new Map:e._events.delete(t)};class o{constructor(){this._events=new Map,this._eventsCount=0}static get VERSION(){return"0.0.6"}eventNames(){return Array.from(this._events.keys())}listeners(e){const t=this._events.get(e);if(!t)return[];if(t.fn)return[t.fn];for(var n=0,s=t.length,r=new Array(s);n<s;n++)r[n]=t[n].fn;return r}listenerCount(e){const t=this._events.get(e);return t?t.fn?1:t.length:0}emit(e,...t){if(!this._events.has(e))return!1;const n=this._events.get(e);let s;if(n.fn)return n.once&&this.removeListener(e,n.fn,void 0,!0),n.fn.call(n.context,...t),!0;{const r=n.length;for(s=0;s<r;s++)n[s].once&&this.removeListener(e,n[s].fn,void 0,!0),n[s].fn.call(n[s].context,...t)}return!0}on(e,t,n){return s(this,e,t,n,!1)}once(e,t,n){return s(this,e,t,n,!0)}removeListener(e,t,n,s){if(!this._events.has(e))return this;if(!t)return r(this,e),this;const o=this._events.get(e);if(o.fn)o.fn!==t||s&&!o.once||n&&o.context!==n||r(this,e);else{for(var i=0,f=[],h=o.length;i<h;i++)(o[i].fn!==t||s&&!o[i].once||n&&o[i].context!==n)&&f.push(o[i]);f.length?this._events.set(e,1===f.length?f[0]:f):r(this,e)}return this}removeAllListeners(e){return e?this._events.delete(e)&&r(this,e):(this._events=new Map,this._eventsCount=0),this}get off(){return this.removeListener}get addListener(){return this.on}}return t})()));